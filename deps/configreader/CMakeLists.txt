cmake_minimum_required(VERSION 2.8)
project(configreader)

set(CONFIGREADER_VERSION_MAJOR 1)
set(CONFIGREADER_VERSION_MINOR 0)
set(CONFIGREADER_VERSION_PATCH 0)

set(CONFIGREADER_VERSION ${CONFIGREADER_VERSION_MAJOR})
set(CONFIGREADER_VERSION ${CONFIGREADER_VERSION}.${CONFIGREADER_VERSION_MINOR})
set(CONFIGREADER_VERSION ${CONFIGREADER_VERSION}.${CONFIGREADER_VERSION_PATCH})

set(CONFIGREADER_HEADERS configreader.h)
set(CONFIGREADER_SOURCES configreader.cpp)

add_library(configreader STATIC
  ${CONFIGREADER_HEADERS}
  ${CONFIGREADER_SOURCES}
)

include_directories(${CMAKE_CURRENT_SOURCE_DIR})
set_property(DIRECTORY ${CMAKE_SOURCE_DIR}
             APPEND PROPERTY INCLUDE_DIRECTORIES ${CMAKE_CURRENT_SOURCE_DIR})

set_property(GLOBAL PROPERTY USE_FOLDERS ON)

if(NOT CONFIGREADER_NO_INSTALL)
  install(TARGETS configreader LIBRARY DESTINATION lib
                               ARCHIVE DESTINATION lib
                               RUNTIME DESTINATION bin)
  install(FILES ${CONFIGREADER_HEADERS} DESTINATION include)
endif()

set(CPACK_PACKAGE_NAME ${PROJECT_NAME})
set(CPACK_PACKAGE_VERSION_MAJOR ${CONFIGREADER_VERSION_MAJOR})
set(CPACK_PACKAGE_VERSION_MINOR ${CONFIGREADER_VERSION_MINOR})
set(CPACK_PACKAGE_VERSION_PATCH ${CONFIGREADER_VERSION_PATCH})

include(CPack)
include(CTest)

if(BUILD_TESTING AND NOT CONFIGREADER_NO_TESTS)
  enable_testing()

  add_executable(configreader_tests configreader_tests.cpp)
  target_link_libraries(configreader_tests configreader)

  add_test(NAME all_tests COMMAND $<TARGET_FILE:configreader_tests>)
endif()
